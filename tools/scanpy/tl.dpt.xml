<tool id="tl.dpt" name="tl.dpt" version="1.3.1+galaxy1">
  <description>Infer progression of cells through geodesic distance along the graph [Haghverdi16]_ [Wolf17i]_.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc

@CMD_read_inputs

sc.tl.dpt(
   adata = '$adata',
   n_dcs = '$n_dcs',
   n_branchings = '$n_branchings',
   min_group_size = '$min_group_size',
   allow_kendall_tau_shift = '$allow_kendall_tau_shift',
   copy = '$copy',)

adata.write_loom($csv_output)
adata.write_csv($loom_output)
]]></configfile>
  </configfiles>
  <inputs>
    <expand macro="inputs_anndata"/>
    <param name="n_dcs" type="int" value="" optional="true" label="n_dcs" help="    The number of diffusion components to use."/>
    <param name="n_branchings" type="int" value="" optional="true" label="n_branchings" help="    Number of branchings to detect."/>
    <param name="min_group_size" type="data" format="[0" value="" optional="true" label="min_group_size" help="    During recursive splitting of branches ('dpt groups') for `n_branchings`    &gt; 1, do not consider groups that contain less than `min_group_size` data    points. If a float, `min_group_size` refers to a fraction of the total    number of data points."/>
    <param name="allow_kendall_tau_shift" type="bool" value="True" optional="true" label="allow_kendall_tau_shift" help="    If a very small branch is detected upon splitting, shift away from    maximum correlation in Kendall tau criterion of [Haghverdi16]_ to    stabilize the splitting."/>
    <param name="copy" type="bool" value="False" optional="true" label="copy" help="    Copy instance before computation and return a copy. Otherwise, perform    computation inplace and return None."/>
    </inputs>
  <outputs>
    <data name="csv_output" type="data" format="csv" label="${tool.name} on ${on_string}: Annotated matrix (csv)"/>
    <data name="If `n_branchings==0`, no field `dpt_groups` will be written." type="data" format="" label="${tool.name} on ${on_string}: If `n_branchings==0`, no field `dpt_groups` will be written."/>
    <data name="dpt_pseudotime" type="pd.Series" label="${tool.name} on ${on_string}: dpt_pseudotime"/>
    <data name="dpt_groups" type="pd.Series" label="${tool.name} on ${on_string}: dpt_groups"/>
    <data name="loom_output" type="data" format="loom" label="${tool.name} on ${on_string}: Annotated matrix (loom)"/>
    </outputs>
  <tests>
    <test>
      <param name="n_dcs" value=""/>
      <param name="n_branchings" value=""/>
      <param name="min_group_size" value=""/>
      <param name="allow_kendall_tau_shift" value=""/>
      <param name="copy" value=""/>
      <output name="loom_output" file=""/>
      <output name="csv_output" file=""/>
      <output name="If `n_branchings==0`, no field `dpt_groups` will be written." file=""/>
      <output name="dpt_pseudotime" file=""/>
      <output name="dpt_groups" file=""/>
      <output name="loom_output" file=""/>
    </test>
  </tests>
  <help><![CDATA[
        Infer progression of cells through geodesic distance along the graph [Haghverdi16]_ [Wolf17i]_.

Reconstruct the progression of a biological process from snapshot
data. `Diffusion Pseudotime` has been introduced by [Haghverdi16]_ and
implemented within Scanpy [Wolf17]_. Here, we use a further developed
version, which is able to deal with disconnected graphs [Wolf17i]_ and can
be run in a `hierarchical` mode by setting the parameter
`n_branchings>1`. We recommend, however, to only use
:func:`~scanpy.api.tl.dpt` for computing pseudotime (`n_branchings=0`) and
to detect branchings via :func:`~scanpy.api.paga`. For pseudotime, you need
to annotate your data with a root cell. For instance::

    adata.uns['iroot'] = np.flatnonzero(adata.obs['cell_types'] == 'Stem')[0]

This requires to run :func:`~scanpy.api.pp.neighbors`, first. In order to
reproduce the original implementation of DPT, use `method=='gauss'` in
this. Using the default `method=='umap'` only leads to minor quantitative
differences, though.

.. versionadded:: 1.1

:func:`~scanpy.api.tl.dpt` also requires to run
:func:`~scanpy.api.tl.diffmap` first. As previously,
:func:`~scanpy.api.tl.dpt` came with a default parameter of ``n_dcs=10`` but
:func:`~scanpy.api.tl.diffmap` has a default parameter of ``n_comps=15``,
you need to pass ``n_comps=10`` in :func:`~scanpy.api.tl.diffmap` in order
to exactly reproduce previous :func:`~scanpy.api.tl.dpt` results.

Parameters
----------
adata : :class:`~anndata.AnnData`
    Annotated data matrix.
n_dcs : `int`, optional (default: 10)
    The number of diffusion components to use.
n_branchings : `int`, optional (default: 0)
    Number of branchings to detect.
min_group_size : [0, 1] or `float`, optional (default: 0.01)
    During recursive splitting of branches ('dpt groups') for `n_branchings`
    > 1, do not consider groups that contain less than `min_group_size` data
    points. If a float, `min_group_size` refers to a fraction of the total
    number of data points.
allow_kendall_tau_shift : `bool`, optional (default: `True`)
    If a very small branch is detected upon splitting, shift away from
    maximum correlation in Kendall tau criterion of [Haghverdi16]_ to
    stabilize the splitting.
copy : `bool`, optional (default: `False`)
    Copy instance before computation and return a copy. Otherwise, perform
    computation inplace and return None.

Returns
-------
Depending on `copy`, returns or updates `adata` with the following fields.

If `n_branchings==0`, no field `dpt_groups` will be written.

dpt_pseudotime : `pd.Series` (`adata.obs`, dtype `float`)
    Array of dim (number of samples) that stores the pseudotime of each
    cell, that is, the DPT distance with respect to the root cell.
dpt_groups : `pd.Series` (`adata.obs`, dtype `category`)
    Array of dim (number of samples) that stores the subgroup id ('0',
    '1', ...) for each cell. The groups  typically correspond to
    'progenitor cells', 'undecided cells' or 'branches' of a process.

Notes
-----
The tool is similar to the R package `destiny` of [Angerer16]_.
    ]]></help>
  <expand macro="citations"/>
</tool>
