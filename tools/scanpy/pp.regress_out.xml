<tool id="pp.regress_out" name="pp.regress_out" version="1.3.1+galaxy1">
  <description>Regress out unwanted sources of variation.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc

@CMD_read_inputs

sc.pp.regress_out(
   adata = '$adata',
   keys = '$keys',
   n_jobs = '$n_jobs',
   copy = '$copy',)

adata.write_loom($csv_output)
adata.write_csv($loom_output)
]]></configfile>
  </configfiles>
  <inputs>
    <expand macro="inputs_anndata"/>
    <param name="keys" type="str" value="" label="keys" help="    Keys for observation annotation on which to regress on."/>
    <param name="n_jobs" type="int" value="None" optional="true" label="n_jobs" help="    Number of jobs for parallel computation."/>
    <param name="copy" type="bool" value="False" optional="true" label="copy" help="    If an :class:`~anndata.AnnData` is passed, determines whether a copy    is returned."/>
    </inputs>
  <outputs>
    <data name="csv_output" type="data" format="csv" label="${tool.name} on ${on_string}: Annotated matrix (csv)"/>
    <data name="loom_output" type="data" format="loom" label="${tool.name} on ${on_string}: Annotated matrix (loom)"/>
    </outputs>
  <tests>
    <test>
      <param name="keys" value=""/>
      <param name="n_jobs" value=""/>
      <param name="copy" value=""/>
      <output name="loom_output" file=""/>
      <output name="csv_output" file=""/>
      <output name="loom_output" file=""/>
    </test>
  </tests>
  <help><![CDATA[
        Regress out unwanted sources of variation.

Uses simple linear regression. This is inspired by Seurat's `regressOut`
function in R [Satija15].

Parameters
----------
adata : :class:`~anndata.AnnData`
    The annotated data matrix.
keys : `str` or list of `str`
    Keys for observation annotation on which to regress on.
n_jobs : `int` or `None`, optional. If None is given, then the n_jobs seting is used (default: `None`)
    Number of jobs for parallel computation.
copy : `bool`, optional (default: `False`)
    If an :class:`~anndata.AnnData` is passed, determines whether a copy
    is returned.

Returns
-------
Depending on `copy` returns or updates `adata` with the corrected data matrix.
    ]]></help>
  <expand macro="citations"/>
</tool>
