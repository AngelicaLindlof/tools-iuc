<tool id="pl.rank_genes_groups_stacked_violin" name="pl.rank_genes_groups_stacked_violin" version="1.3.1+galaxy1">
  <description>Plot ranking of genes using stacked_violin plot (see `scanpy.api.pl.stacked_violin`)</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc
@CMD_set_figure_params
@CMD_read_inputs

sc.pl.rank_genes_groups_stacked_violin(
   adata = '$adata',
   groups = '$groups',
   n_genes = '$n_genes',
   groupby = '$groupby',
   key = '$key',
   show = '$show',
   save = '$save',
   ax = '$ax',
   **kwds = '$**kwds',)
]]></configfile>
  </configfiles>
  <inputs>
    <expand macro="inputs_anndata"/>
    <param name="groups" type="str" value="" label="groups" help="    The groups for which to show the gene ranking."/>
    <param name="n_genes" type="int" value="" optional="true" label="n_genes" help="    Number of genes to show."/>
    <param name="groupby" type="str" value="None" optional="true" label="groupby" help="    The key of the observation grouping to consider. By default,    the groupby is chosen from the rank genes groups parameter but    other groupby options can be used.  It is expected that    groupby is a categorical. If groupby is not a categorical observation,    it would be subdivided into `num_categories` (see `scanpy.api.pl.stacked_violin`)."/>
    <param name="key" type="str" value="" label="key" help="    Key used to store the ranking results in `adata.uns`."/>
    <param name="show" type="bool" value="None" optional="true" label="show" help="     Show the plot, do not return axis."/>
    <param name="save" type="bool" value="None" optional="true" label="save" help="    If `True` or a `str`, save the figure. A string is appended to the default    filename. Infer the filetype if ending on {'.pdf', '.png', '.svg'}."/>
    <param name="ax" type="matplotlib.Axes" value="None" optional="true" label="ax" help="    A matplotlib axes object. Only works if plotting a single component."/>
    <param name="**kwds" type="data" format="keyword arguments" value="" label="**kwds" help="    Are passed to `scanpy.api.pl.stacked_violin`."/>
    <section name="pl_settings" title="Plot settings" expanded="false"><expand macro="inputs_set_figure_params"/></section></inputs>
  <outputs>
    </outputs>
  <tests>
    <test>
      <param name="groups" value=""/>
      <param name="n_genes" value=""/>
      <param name="groupby" value=""/>
      <param name="key" value=""/>
      <param name="show" value=""/>
      <param name="save" value=""/>
      <param name="ax" value=""/>
      <param name="**kwds" value=""/>
      <expand macro="tests_set_figure_params"/>
    </test>
  </tests>
  <help><![CDATA[
        Plot ranking of genes using stacked_violin plot (see `scanpy.api.pl.stacked_violin`)

Parameters
----------
adata : :class:`~anndata.AnnData`
    Annotated data matrix.
groups : `str` or `list` of `str`
    The groups for which to show the gene ranking.
n_genes : `int`, optional (default: 10)
    Number of genes to show.
groupby : `str` or `None`, optional (default: `None`)
    The key of the observation grouping to consider. By default,
    the groupby is chosen from the rank genes groups parameter but
    other groupby options can be used.  It is expected that
    groupby is a categorical. If groupby is not a categorical observation,
    it would be subdivided into `num_categories` (see `scanpy.api.pl.stacked_violin`).
key : `str`
    Key used to store the ranking results in `adata.uns`.
show : `bool`, optional (default: `None`)
     Show the plot, do not return axis.
save : `bool` or `str`, optional (default: `None`)
    If `True` or a `str`, save the figure. A string is appended to the default
    filename. Infer the filetype if ending on {'.pdf', '.png', '.svg'}.
ax : `matplotlib.Axes`, optional (default: `None`)
    A matplotlib axes object. Only works if plotting a single component.
**kwds : keyword arguments
    Are passed to `scanpy.api.pl.stacked_violin`.
    ]]></help>
  <expand macro="citations"/>
</tool>
