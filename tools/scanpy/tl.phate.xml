<tool id="tl.phate" name="tl.phate" version="1.3.1+galaxy1">
    <description>Potential of Heat-diffusion for Affinity-based Trajectory Embedding (PHATE)</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
            python $script_file
        ]]></command>
    <configfiles>
        <configfile name="script_file"><![CDATA[
@CMD_imports@
@CMD_read_inputs@

sc.tl.phate(
   adata=adata,
   n_components=$n_components,
   k=$k,
   #if $a
   a=$a,
   #end if
   n_landmark=$n_landmark,
   #if $t.selection == 'auto'
   t='auto',
   #else
   t=$t.t,
   #end if
   gamm =$gamma,
   n_pca=$n_pca,
   knn_dist='$knn_dist',
   mds_dist='$mds_dist',
   mds='$mds',
   random_state=$random_state,
   copy=False)

@CMD_anndata_write_outputs@
np.savetxt('$X_phate', adata.obsm['X_phate'], delimiter='\t')
]]></configfile>
    </configfiles>
    <inputs>
        <expand macro="inputs_anndata"/>
        <param argument="n_components" type="integer" value="2" label="Number of dimensions in which the data will be embedded" help=""/>
        <param argument="k" type="integer" value="5" label="Number of nearest neighbors on which to build kernel" help=""/>
        <param argument="a" type="integer" value="15" optional="true" label="Decay rate of kernel tails" help="If None, alpha decaying kernel is not used"/>
        <param argument="n_landmark" type="integer" value="2000" label="Number of landmarks to use" help=""/>
        <conditional name="t">
            <param argument="selection" type="select" label="Selection of the level of diffusion" help=""/>
                <option value="auto">Selection according to the knee point in the Von Neumann Entropy of the diffusion operator</option>
                <option value="manual">Manual selection</option>
            </param>
            <when value="auto">
            <when value="manual">
                <param argument="t" type="integer" value="" label="Level of diffusion" help="Power to which the diffusion operator is powered sets the level of diffusion"/>
            </when>
        </conditional>
        <param argument="gamma" type="float" value="1" label="Gamma" help="Informational distance constant between -1 and 1. `gamma=1` gives the PHATE log potential, `gamma=0` gives a square root potential."/>
        <param argument="n_pca" type="integer" value="100" label="Number of principal components to use for calculating neighborhoods" help="For extremely large datasets, using n_pca &lt; 20 allows neighborhoods to be calculated in log(n_samples) time."/>
        <param argument="knn_dist" type="select" label="Distance metric for building kNN graph" help="Recommended values: 'euclidean' and 'cosine'">
            <expand macro="numeric_distance_metric_options"/>
        </param>
        <param argument="mds_dist" type="select" label="Distance metric for MDS" help="Recommended values: 'euclidean' and 'cosine'">
            <expand macro="numeric_distance_metric_options"/>
        </param>
        <param argument="mds" type="select" label="MDS algorithm for dimensionality reduction" help="">
            <option value="classic">classic</option>
            <option value="metric" selected="true">metric</option>
            <option value="nonmetric">nonmetric</option>
        </param>
        <param name="random_state" type="integer" value="0" label="Seed for python, numpy and tensorflows" help=""/>
        <expand macro="anndata_output_format"/>
    </inputs>
    <outputs>
        <expand macro="anndata_outputs"/>
        <data name="X_phate" format="tabular" label="${tool.name} on ${on_string}: PHATE coordinates"/>
    </outputs>
    <tests>
        <test>
            <conditional name="input">
                <param name="format" value="h5ad" />
                <param name="adata" value="paul15.h5ad" />
            </conditional>
            <param name="n_components" value="2"/>
            <param name="k" value="5"/>
            <param name="a" value="15"/>
            <param name="n_landmark" value="2000"/>
            <conditional name="t">
                <param name="selection" value="auto"/>
            </conditional>
            <param name="gamma" value="1"/>
            <param name="n_pca" value="100"/>
            <param name="knn_dist" value="euclidean"/>
            <param name="mds_dist" value="metric"/>
            <param name="random_state" value="0"/>
            <param name="anndata_output_format" value="h5ad" />
            <output name="anndata_out_h5ad" file="tl.phate.paul15_denoise.h5ad" ftype="h5" compare="sim_size"/>
        </test>
    </tests>
    <help><![CDATA[
Potential of Heat-diffusion for Affinity-based Trajectory Embedding (PHATE)
embeds high dimensional single-cell data into two or three dimensions for
visualization of biological progressions.

For more information and access to the object-oriented interface, read the
`PHATE documentation <https://phate.readthedocs.io/>`__.  For
tutorials, bug reports, and R/MATLAB implementations, visit the `PHATE
GitHub page <https://github.com/KrishnaswamyLab/PHATE/>`__. For help
using PHATE, go `here <https://krishnaswamylab.org/get-help>`__.

Returns
-------

X_phate : PHATE coordinates of data.

More details on the `scanpy documentation
<https://scanpy.readthedocs.io/en/latest/api/scanpy.api.tl.phate.html#scanpy.api.tl.phate>`_
    ]]></help>
    <expand macro="citations"/>
</tool>
