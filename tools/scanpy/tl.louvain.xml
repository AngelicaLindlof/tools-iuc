<tool id="tl.louvain" name="tl.louvain" version="1.3.1+galaxy1">
  <description>Cluster cells into subgroups [Blondel08]_ [Levine15]_ [Traag17]_.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc

@CMD_read_inputs

sc.tl.louvain(
   adata = '$adata',
   resolution = '$resolution',
   random_state = '$random_state',
   restrict_to = '$restrict_to',
   key_added = '$key_added',
   adjacency = '$adjacency',
   flavor = '$flavor',
   copy = '$copy',)
]]></configfile>
  </configfiles>
  <inputs>
    <expand macro="inputs_anndata"/>
    <param name="resolution" type="float" value="" optional="true" label="resolution" help="    For the default flavor ('vtraag'), you can provide a resolution (higher    resolution means finding more and smaller clusters), which defaults to    1.0. See “Time as a resolution parameter” in [Lambiotte09]_."/>
    <param name="random_state" type="int" value="" optional="true" label="random_state" help="    Change the initialization of the optimization."/>
    <param name="restrict_to" type="tuple" value="" optional="true" label="restrict_to" help="    Restrict the clustering to the categories within the key for sample    annotation, tuple needs to contain (obs key, list of categories)."/>
    <param name="key_added" type="str" value="" optional="true" label="key_added" help="    Key under which to add the cluster labels."/>
    <param name="adjacency" type="data" format="sparse matrix or `None`" value="None" optional="true" label="adjacency" help="    Sparse adjacency matrix of the graph, defaults to    `adata.uns['neighbors']['connectivities']`."/>
    <param name="flavor" type="data" format="{'vtraag'" value="" label="flavor" help="    Choose between to packages for computing the clustering. 'vtraag' is    much more powerful."/>
    <param name="copy" type="bool" value="False" label="copy" help="    Copy adata or modify it inplace."/>
    </inputs>
  <outputs>
    <data name="None" type="data" format="" label="${tool.name} on ${on_string}: None"/>
    <data name="    louvain" type="data" format=":class:`pandas.Series` " label="${tool.name} on ${on_string}:     louvain"/>
    <data name="AnnData" type="data" format="" label="${tool.name} on ${on_string}: AnnData"/>
    </outputs>
  <tests>
    <test>
      <param name="resolution" value=""/>
      <param name="random_state" value=""/>
      <param name="restrict_to" value=""/>
      <param name="key_added" value=""/>
      <param name="adjacency" value=""/>
      <param name="flavor" value=""/>
      <param name="copy" value=""/>
      <output name="None" file=""/>
      <output name="    louvain" file=""/>
      <output name="AnnData" file=""/>
    </test>
  </tests>
  <help><![CDATA[
        Cluster cells into subgroups [Blondel08]_ [Levine15]_ [Traag17]_.

Cluster cells using the Louvain algorithm [Blondel08]_ in the implementation
of [Traag17]_. The Louvain algorithm has been proposed for single-cell
analysis by [Levine15]_.

This requires to run :func:`~scanpy.api.pp.neighbors`, first.

Parameters
----------
adata : :class:`~anndata.AnnData`
    The annotated data matrix.
resolution : `float` or `None`, optional (default: 1)
    For the default flavor ('vtraag'), you can provide a resolution (higher
    resolution means finding more and smaller clusters), which defaults to
    1.0. See “Time as a resolution parameter” in [Lambiotte09]_.
random_state : `int`, optional (default: 0)
    Change the initialization of the optimization.
restrict_to : `tuple`, optional (default: None)
    Restrict the clustering to the categories within the key for sample
    annotation, tuple needs to contain (obs key, list of categories).
key_added : `str`, optional (default: 'louvain')
    Key under which to add the cluster labels.
adjacency : sparse matrix or `None`, optional (default: `None`)
    Sparse adjacency matrix of the graph, defaults to
    `adata.uns['neighbors']['connectivities']`.
flavor : {'vtraag', 'igraph'}
    Choose between to packages for computing the clustering. 'vtraag' is
    much more powerful.
copy : `bool` (default: `False`)
    Copy adata or modify it inplace.

Returns
-------
None
    By default (`copy=False`), updates ``adata`` with the following fields:

    louvain : :class:`pandas.Series` (``adata.obs``, dtype `category`)
        Array of dim (number of samples) that stores the subgroup id ('0',
        '1', ...) for each cell.

AnnData
    When `copy=True` is set, a copy of ``adata`` with those fields is returned.
    ]]></help>
  <expand macro="citations"/>
</tool>
