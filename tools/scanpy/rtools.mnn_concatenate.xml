<tool id="rtools.mnn_concatenate" name="rtools.mnn_concatenate" version="1.3.1+galaxy1">
  <description>Merge AnnData objects and correct batch effects using the MNN method.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc

@CMD_read_inputs

sc.rtools.mnn_concatenate(
   adatas = '$adata',
   geneset = '$geneset',
   k = '$k',
   sigma = '$sigma',
   n_jobs = '$n_jobs',
   kwds : = '$kwds :',)

adata.write_loom($csv_output)
adata.write_csv($loom_output)

adata.write_loom($csv_output)
adata.write_csv($loom_output)

adata.write_loom($csv_output)
adata.write_csv($loom_output)
]]></configfile>
  </configfiles>
  <inputs>
    <expand macro="inputs_anndata"/>
    <param name="geneset" type="list" value="None" optional="true" label="geneset" help="    A list specifying the genes with which distances between cells are    calculated in mnnCorrect, typically the highly variable genes.    All genes are used if no geneset provided. See the `scran manual    &lt;https://bioconductor.org/packages/release/bioc/html/scran.html&gt;`__ for    details."/>
    <param name="k" type="int" value="" label="k" help="    See the `scran manual &lt;https://bioconductor.org/packages/release/bioc/html/scran.html&gt;`__    for details."/>
    <param name="sigma" type="int" value="" label="sigma" help="    See the `scran manual &lt;https://bioconductor.org/packages/release/bioc/html/scran.html&gt;`__    for details."/>
    <param name="n_jobs" type="int" value="sc.settings.n_jobs" label="n_jobs" help="    Number of jobs."/>
    <param name="kwds :" type="data" format="" value="" label="kwds :" help="    Keyword arguments passed to Anndata.concatenate"/>
    </inputs>
  <outputs>
    <data name="An :class:`~anndata.AnnData` object with MNN corrected data matrix X." type="data" format="" label="${tool.name} on ${on_string}: An :class:`~anndata.AnnData` object with MNN corrected data matrix X."/>
    <data name="Example" type="data" format="" label="${tool.name} on ${on_string}: Example"/>
    <data name="-------" type="data" format="" label="${tool.name} on ${on_string}: -------"/>
    <data name="csv_output" type="data" format="csv" label="${tool.name} on ${on_string}: Annotated matrix (csv)"/>
    <data name="AnnData object with n_obs × n_vars = 223 × 33694" type="data" format="" label="${tool.name} on ${on_string}: AnnData object with n_obs × n_vars = 223 × 33694"/>
    <data name="csv_output" type="data" format="csv" label="${tool.name} on ${on_string}: Annotated matrix (csv)"/>
    <data name="AnnData object with n_obs × n_vars = 1457 × 33694" type="data" format="" label="${tool.name} on ${on_string}: AnnData object with n_obs × n_vars = 1457 × 33694"/>
    <data name="csv_output" type="data" format="csv" label="${tool.name} on ${on_string}: Annotated matrix (csv)"/>
    <data name="loom_output" type="data" format="loom" label="${tool.name} on ${on_string}: Annotated matrix (loom)"/>
    <data name="loom_output" type="data" format="loom" label="${tool.name} on ${on_string}: Annotated matrix (loom)"/>
    <data name="loom_output" type="data" format="loom" label="${tool.name} on ${on_string}: Annotated matrix (loom)"/>
    </outputs>
  <tests>
    <test>
      <param name="geneset" value=""/>
      <param name="k" value=""/>
      <param name="sigma" value=""/>
      <param name="n_jobs" value=""/>
      <param name="kwds :" value=""/>
      <output name="An :class:`~anndata.AnnData` object with MNN corrected data matrix X." file=""/>
      <output name="Example" file=""/>
      <output name="-------" file=""/>
      <output name="loom_output" file=""/>
      <output name="csv_output" file=""/>
      <output name="AnnData object with n_obs × n_vars = 223 × 33694" file=""/>
      <output name="loom_output" file=""/>
      <output name="csv_output" file=""/>
      <output name="AnnData object with n_obs × n_vars = 1457 × 33694" file=""/>
      <output name="loom_output" file=""/>
      <output name="csv_output" file=""/>
      <output name="loom_output" file=""/>
      <output name="loom_output" file=""/>
      <output name="loom_output" file=""/>
    </test>
  </tests>
  <help><![CDATA[
        Merge AnnData objects and correct batch effects using the MNN method.

Batch effect correction by matching mutual nearest neighbors [Haghverdi18]_
has been implemented as a function 'mnnCorrect' in the R package
`scran <https://bioconductor.org/packages/release/bioc/html/scran.html>`__
This function provides a wrapper to use the mnnCorrect function when
concatenating Anndata objects by using the Python-R interface `rpy2
<https://pypi.org/project/rpy2/>`__.

Parameters
----------
adatas : :class:`~anndata.AnnData`
    AnnData matrices to concatenate with. Each dataset should generally be
    log-transformed, e.g., log-counts. Datasets should have the same number
    of genes, or at lease have all the genes in geneset.
geneset : `list`, optional (default: `None`)
    A list specifying the genes with which distances between cells are
    calculated in mnnCorrect, typically the highly variable genes.
    All genes are used if no geneset provided. See the `scran manual
    <https://bioconductor.org/packages/release/bioc/html/scran.html>`__ for
    details.
k : `int`, ptional (default: 20)
    See the `scran manual <https://bioconductor.org/packages/release/bioc/html/scran.html>`__
    for details.
sigma : `int`, ptional (default: 20)
    See the `scran manual <https://bioconductor.org/packages/release/bioc/html/scran.html>`__
    for details.
n_jobs : `int` or `None` (default: `sc.settings.n_jobs`)
    Number of jobs.
kwds :
    Keyword arguments passed to Anndata.concatenate

Returns
-------
An :class:`~anndata.AnnData` object with MNN corrected data matrix X.

Example
-------
>>> adata1
AnnData object with n_obs × n_vars = 223 × 33694
    obs: 'n_genes', 'percent_mito', 'n_counts', 'Sample', 'Donor', 'Tissue'
    var: 'gene_ids', 'n_cells'
>>> adata2
AnnData object with n_obs × n_vars = 1457 × 33694
    obs: 'n_genes', 'percent_mito', 'n_counts', 'Sample', 'Donor', 'Tissue'
    var: 'gene_ids', 'n_cells'
>>> adata3 = sc.pp.mnnconcatenate(adata2, adata1, geneset = hvgs)
    ]]></help>
  <expand macro="citations"/>
</tool>
