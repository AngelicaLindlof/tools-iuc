<tool id="tl.draw_graph" name="tl.draw_graph" version="1.3.1+galaxy1">
  <description>Force-directed graph drawing [Islam11]_ [Jacomy14]_ [Chippada18]_.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc

@CMD_read_inputs

sc.tl.draw_graph(
   adata = '$adata',
   layout = '$layout',
   root = '$root',
   random_state = '$random_state',
   adjacency = '$adjacency',
   key_ext = '$key_ext',
   proceed = '$proceed',
   init_pos = '$init_pos',
   copy = '$copy',
   **kwds = '$**kwds',)

adata.write_loom($csv_output)
adata.write_csv($loom_output)
]]></configfile>
  </configfiles>
  <inputs>
    <expand macro="inputs_anndata"/>
    <param name="layout" type="str" value="" optional="true" label="layout" help="    'fa' (`ForceAtlas2`) or any valid `igraph layout    &lt;http://igraph.org/c/doc/igraph-Layout.html&gt;`__. Of particular interest    are 'fr' (Fruchterman Reingold), 'grid_fr' (Grid Fruchterman Reingold,    faster than 'fr'), 'kk' (Kamadi Kawai', slower than 'fr'), 'lgl' (Large    Graph, very fast), 'drl' (Distributed Recursive Layout, pretty fast) and    'rt' (Reingold Tilford tree layout)."/>
    <param name="root" type="int" value="None" optional="true" label="root" help="    Root for tree layouts."/>
    <param name="random_state" type="int" value="" optional="true" label="random_state" help="    For layouts with random initialization like 'fr', change this to use    different intial states for the optimization. If `None`, no seed is set."/>
    <param name="adjacency" type="data" format="sparse matrix or `None`" value="None" optional="true" label="adjacency" help="    Sparse adjacency matrix of the graph, defaults to    `adata.uns['neighbors']['connectivities']`."/>
    <param name="key_ext" type="str" value="None" optional="true" label="key_ext" help="    By default, append `layout`."/>
    <param name="proceed" type="bool" value="None" optional="true" label="proceed" help="    Continue computation, starting off with 'X_draw_graph_`layout`'."/>
    <param name="init_pos" type="data" format="{'paga'" value="False" optional="true" label="init_pos" help="    Use precomputed coordinates for initialization."/>
    <param name="copy" type="bool" value="False" label="copy" help="    Return a copy instead of writing to adata."/>
    <param name="**kwds" type="data" format="further parameters" value="" label="**kwds" help="    Parameters of chosen igraph layout. See, e.g.,    `fruchterman_reingold &lt;http://igraph.org/python/doc/igraph.Graph-class.html#layout_fruchterman_reingold&gt;`__. One of the most important ones is `maxiter`."/>
    </inputs>
  <outputs>
    <data name="csv_output" type="data" format="csv" label="${tool.name} on ${on_string}: Annotated matrix (csv)"/>
    <data name="X_draw_graph_`layout`" type="adata.obsm" label="${tool.name} on ${on_string}: X_draw_graph_`layout`"/>
    <data name="loom_output" type="data" format="loom" label="${tool.name} on ${on_string}: Annotated matrix (loom)"/>
    </outputs>
  <tests>
    <test>
      <param name="layout" value=""/>
      <param name="root" value=""/>
      <param name="random_state" value=""/>
      <param name="adjacency" value=""/>
      <param name="key_ext" value=""/>
      <param name="proceed" value=""/>
      <param name="init_pos" value=""/>
      <param name="copy" value=""/>
      <param name="**kwds" value=""/>
      <output name="loom_output" file=""/>
      <output name="csv_output" file=""/>
      <output name="X_draw_graph_`layout`" file=""/>
      <output name="loom_output" file=""/>
    </test>
  </tests>
  <help><![CDATA[
        Force-directed graph drawing [Islam11]_ [Jacomy14]_ [Chippada18]_.

An alternative to tSNE that often preserves the topology of the data
better. This requires to run :func:`~scanpy.api.pp.neighbors`, first.

The default layout ('fa', `ForceAtlas2`) [Jacomy14]_ uses the package `fa2
<https://github.com/bhargavchippada/forceatlas2>`__ [Chippada18]_, which can
be installed via `pip install fa2`.

`Force-directed graph drawing
<https://en.wikipedia.org/wiki/Force-directed_graph_drawing>`__ describes a
class of long-established algorithms for visualizing graphs. It has been
suggested for visualizing single-cell data by [Islam11]_. Many other layouts
as implemented in igraph [Csardi06]_ are available. Similar approaches have
been used by [Zunder15]_ or [Weinreb17]_.

Parameters
----------
adata : :class:`~anndata.AnnData`
    Annotated data matrix.
layout : `str`, optional (default: 'fa')
    'fa' (`ForceAtlas2`) or any valid `igraph layout
    <http://igraph.org/c/doc/igraph-Layout.html>`__. Of particular interest
    are 'fr' (Fruchterman Reingold), 'grid_fr' (Grid Fruchterman Reingold,
    faster than 'fr'), 'kk' (Kamadi Kawai', slower than 'fr'), 'lgl' (Large
    Graph, very fast), 'drl' (Distributed Recursive Layout, pretty fast) and
    'rt' (Reingold Tilford tree layout).
root : `int` or `None`, optional (default: `None`)
    Root for tree layouts.
random_state : `int` or `None`, optional (default: 0)
    For layouts with random initialization like 'fr', change this to use
    different intial states for the optimization. If `None`, no seed is set.
adjacency : sparse matrix or `None`, optional (default: `None`)
    Sparse adjacency matrix of the graph, defaults to
    `adata.uns['neighbors']['connectivities']`.
key_ext : `str`, optional (default: `None`)
    By default, append `layout`.
proceed : `bool`, optional (default: `None`)
    Continue computation, starting off with 'X_draw_graph_`layout`'.
init_pos : {'paga', any valid 2d-`.obsm` key, `False`}, optional (default: `False`)
    Use precomputed coordinates for initialization.
copy : `bool` (default: `False`)
    Return a copy instead of writing to adata.
**kwds : further parameters
    Parameters of chosen igraph layout. See, e.g.,
    `fruchterman_reingold <http://igraph.org/python/doc/igraph.Graph-class.html#layout_fruchterman_reingold>`__. One of the most important ones is `maxiter`.

Returns
-------
Depending on `copy`, returns or updates `adata` with the following field.

X_draw_graph_`layout` : `adata.obsm`
    Coordinates of graph layout. E.g. for layout='fa' (the default), the field is called 'X_draw_graph_fa'
    ]]></help>
  <expand macro="citations"/>
</tool>
