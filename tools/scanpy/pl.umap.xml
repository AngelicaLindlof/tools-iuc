<tool id="pl.umap" name="pl.umap" version="1.3.1+galaxy1">
  <description>Scatter plot in UMAP basis.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc
@CMD_set_figure_params
@CMD_read_inputs

sc.pl.umap(
   adata = '$adata',
   color = '$color',
   use_raw = '$use_raw',
   edges = '$edges',
   edges_width = '$edges_width',
   edges_color = '$edges_color',
   arrows = '$arrows',
   sort_order = '$sort_order',
   groups = '$groups',
   components = '$components',
   projection = '$projection',
   legend_loc = '$legend_loc',
   legend_fontsize = '$legend_fontsize',
   legend_fontweight = '$legend_fontweight',
   color_map = '$color_map',
   palette = '$palette',
   frameon = '$frameon',
   right_margin = '$right_margin',
   size = '$size',
   title = '$title',
   show = '$show',
   save = '$save',
   ax = '$ax',)
]]></configfile>
  </configfiles>
  <inputs>
    <expand macro="inputs_anndata"/>
    <param name="color" type="data" format="string or list of strings" value="None" optional="true" label="color" help="    Keys for annotations of observations/cells or variables/genes, e.g.,    `'ann1'` or `['ann1', 'ann2']`."/>
    <param name="use_raw" type="bool" value="None" optional="true" label="use_raw" help="    Use `raw` attribute of `adata` if present."/>
    <param name="edges" type="bool" value="False" optional="true" label="edges" help="    Show edges."/>
    <param name="edges_width" type="float" value="" optional="true" label="edges_width" help="    Width of edges."/>
    <param name="edges_color" type="data" format="matplotlib color" value="" optional="true" label="edges_color" help="    Color of edges."/>
    <param name="arrows" type="bool" value="False" optional="true" label="arrows" help="    Show arrows (requires to run :func:`~scanpy.api.tl.rna_velocity` before)."/>
    <param name="sort_order" type="bool" value="True" optional="true" label="sort_order" help="    For continuous annotations used as color parameter, plot data points    with higher values on top of others."/>
    <param name="groups" type="str" value="all groups" optional="true" label="groups" help="    Restrict to a few categories in categorical observation annotation."/>
    <param name="components" type="str" value="" optional="true" label="components" help="     For instance, ['1,2', '2,3']."/>
    <param name="projection" type="data" format="{'2d'" value="" optional="true" label="projection" help="     Projection of plot."/>
    <param name="legend_loc" type="data" format="str" value="" optional="true" label="legend_loc" help="     Location of legend, either 'on data', 'right margin' or valid keywords     for matplotlib.legend."/>
    <param name="legend_fontsize" type="int" value="None" optional="true" label="legend_fontsize" help="     Legend font size."/>
    <param name="legend_fontweight" type="data" format="{'normal'" value="None" optional="true" label="legend_fontweight" help="     Legend font weight. Defaults to 'bold' if `legend_loc = 'on data'`,     otherwise to 'normal'. Available are `['light', 'normal', 'medium',     'semibold', 'bold', 'heavy', 'black']`."/>
    <param name="color_map" type="str" value="matplotlib.rcParams['image.cmap']" optional="true" label="color_map" help="     String denoting matplotlib color map."/>
    <param name="palette" type="data" format="list of `str`" value="None" optional="true" label="palette" help="     Colors to use for plotting groups (categorical annotation)."/>
    <param name="frameon" type="bool" value="True" optional="true" label="frameon" help="     Draw a frame around the scatter plot."/>
    <param name="right_margin" type="float" value="None" label="right_margin" help="     Adjust the width of the space right of each plotting panel."/>
    <param name="size" type="float" value="None" optional="true" label="size" help="     Point size."/>
    <param name="title" type="str" value="None" optional="true" label="title" help="     Provide title for panels either as, e.g. `[&quot;title1&quot;, &quot;title2&quot;, ...]`."/>
    <param name="show" type="bool" value="None" optional="true" label="show" help="     Show the plot, do not return axis."/>
    <param name="save" type="bool" value="None" optional="true" label="save" help="    If `True` or a `str`, save the figure. A string is appended to the default    filename. Infer the filetype if ending on {'.pdf', '.png', '.svg'}."/>
    <param name="ax" type="matplotlib.Axes" value="None" optional="true" label="ax" help="    A matplotlib axes object. Only works if plotting a single component."/>
    <section name="pl_settings" title="Plot settings" expanded="false"><expand macro="inputs_set_figure_params"/></section></inputs>
  <outputs>
    <data name="If `show==False` a `matplotlib.Axis` or a list of it." type="data" format="" label="${tool.name} on ${on_string}: If `show==False` a `matplotlib.Axis` or a list of it."/>
    </outputs>
  <tests>
    <test>
      <param name="color" value=""/>
      <param name="use_raw" value=""/>
      <param name="edges" value=""/>
      <param name="edges_width" value=""/>
      <param name="edges_color" value=""/>
      <param name="arrows" value=""/>
      <param name="sort_order" value=""/>
      <param name="groups" value=""/>
      <param name="components" value=""/>
      <param name="projection" value=""/>
      <param name="legend_loc" value=""/>
      <param name="legend_fontsize" value=""/>
      <param name="legend_fontweight" value=""/>
      <param name="color_map" value=""/>
      <param name="palette" value=""/>
      <param name="frameon" value=""/>
      <param name="right_margin" value=""/>
      <param name="size" value=""/>
      <param name="title" value=""/>
      <param name="show" value=""/>
      <param name="save" value=""/>
      <param name="ax" value=""/>
      <expand macro="tests_set_figure_params"/>
      <output name="If `show==False` a `matplotlib.Axis` or a list of it." file=""/>
    </test>
  </tests>
  <help><![CDATA[
        Scatter plot in UMAP basis.

Parameters
----------
adata : :class:`~anndata.AnnData`
    Annotated data matrix.
color : string or list of strings, optional (default: `None`)
    Keys for annotations of observations/cells or variables/genes, e.g.,
    `'ann1'` or `['ann1', 'ann2']`.
use_raw : `bool`, optional (default: `None`)
    Use `raw` attribute of `adata` if present.
edges : `bool`, optional (default: `False`)
    Show edges.
edges_width : `float`, optional (default: 0.1)
    Width of edges.
edges_color : matplotlib color, optional (default: 'grey')
    Color of edges.
arrows : `bool`, optional (default: `False`)
    Show arrows (requires to run :func:`~scanpy.api.tl.rna_velocity` before).
sort_order : `bool`, optional (default: `True`)
    For continuous annotations used as color parameter, plot data points
    with higher values on top of others.
groups : `str`, optional (default: `all groups`)
    Restrict to a few categories in categorical observation annotation.
components : `str` or list of `str`, optional (default: '1,2')
     For instance, ['1,2', '2,3'].
projection : {'2d', '3d'}, optional (default: '2d')
     Projection of plot.
legend_loc : str, optional (default: 'right margin')
     Location of legend, either 'on data', 'right margin' or valid keywords
     for matplotlib.legend.
legend_fontsize : `int`, optional (default: `None`)
     Legend font size.
legend_fontweight : {'normal', 'bold', ...}, optional (default: `None`)
     Legend font weight. Defaults to 'bold' if `legend_loc = 'on data'`,
     otherwise to 'normal'. Available are `['light', 'normal', 'medium',
     'semibold', 'bold', 'heavy', 'black']`.
color_map : `str`, optional (default: `matplotlib.rcParams['image.cmap']`)
     String denoting matplotlib color map.
palette : list of `str`, optional (default: `None`)
     Colors to use for plotting groups (categorical annotation).
frameon : `bool`, optional (default: `True`)
     Draw a frame around the scatter plot.
right_margin : `float` or list of `float` (default: `None`)
     Adjust the width of the space right of each plotting panel.
size : `float`, optional (default: `None`)
     Point size.
title : `str`, optional (default: `None`)
     Provide title for panels either as, e.g. `["title1", "title2", ...]`.
show : `bool`, optional (default: `None`)
     Show the plot, do not return axis.
save : `bool` or `str`, optional (default: `None`)
    If `True` or a `str`, save the figure. A string is appended to the default
    filename. Infer the filetype if ending on {'.pdf', '.png', '.svg'}.
ax : `matplotlib.Axes`, optional (default: `None`)
    A matplotlib axes object. Only works if plotting a single component.

Returns
-------
If `show==False` a `matplotlib.Axis` or a list of it.
    ]]></help>
  <expand macro="citations"/>
</tool>
