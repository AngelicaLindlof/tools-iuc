<tool id="pp.scale" name="pp.scale" version="1.3.1+galaxy1">
  <description>Scale data to unit variance and zero mean.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc

@CMD_read_inputs

sc.pp.scale(
   data = '$adata',
   zero_center = '$zero_center',
   max_value = '$max_value',
   copy = '$copy',)

adata.write_loom($csv_output)
adata.write_csv($loom_output)
]]></configfile>
  </configfiles>
  <inputs>
    <expand macro="inputs_anndata"/>
    <param name="zero_center" type="bool" value="True" optional="true" label="zero_center" help="    If `False`, omit zero-centering variables, which allows to handle sparse    input efficiently."/>
    <param name="max_value" type="float" value="None" optional="true" label="max_value" help="    Clip (truncate) to this value after scaling. If `None`, do not clip."/>
    <param name="copy" type="bool" value="False" optional="true" label="copy" help="    If an :class:`~anndata.AnnData` is passed, determines whether a copy    is returned."/>
    </inputs>
  <outputs>
    <data name="csv_output" type="data" format="csv" label="${tool.name} on ${on_string}: Annotated matrix (csv)"/>
    <data name="loom_output" type="data" format="loom" label="${tool.name} on ${on_string}: Annotated matrix (loom)"/>
    </outputs>
  <tests>
    <test>
      <param name="zero_center" value=""/>
      <param name="max_value" value=""/>
      <param name="copy" value=""/>
      <output name="loom_output" file=""/>
      <output name="csv_output" file=""/>
      <output name="loom_output" file=""/>
    </test>
  </tests>
  <help><![CDATA[
        Scale data to unit variance and zero mean.

Parameters
----------
data : :class:`~anndata.AnnData`, `np.ndarray`, `sp.sparse`
    The (annotated) data matrix of shape `n_obs` Ã— `n_vars`. Rows correspond
    to cells and columns to genes.
zero_center : `bool`, optional (default: `True`)
    If `False`, omit zero-centering variables, which allows to handle sparse
    input efficiently.
max_value : `float` or `None`, optional (default: `None`)
    Clip (truncate) to this value after scaling. If `None`, do not clip.
copy : `bool`, optional (default: `False`)
    If an :class:`~anndata.AnnData` is passed, determines whether a copy
    is returned.

Returns
-------
Depending on `copy` returns or updates `adata` with a scaled `adata.X`.
    ]]></help>
  <expand macro="citations"/>
</tool>
