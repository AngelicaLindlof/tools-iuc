<tool id="pl.stacked_violin" name="pl.stacked_violin" version="1.3.1+galaxy1">
  <description>Stacked violin plots.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc
@CMD_set_figure_params
@CMD_read_inputs

sc.pl.stacked_violin(
   adata = '$adata',
   var_names = '$var_names',
   groupby = '$groupby',
   log = '$log',
   use_raw = '$use_raw',
   num_categories = '$num_categories',
   stripplot = '$stripplot',
   jitter = '$jitter',
   size = '$size',
   order = '$order',
   scale = '$scale',
   figsize = '$figsize',
   var_group_positions = '$var_group_positions',
   var_group_labels = '$var_group_labels',
   swap_axes: `bool`, optional (default: `False`) = '$swap_axes: `bool`, optional (default: `False`)',
   var_group_rotation = '$var_group_rotation',
   show = '$show',
   save = '$save',
   ax = '$ax',
   **kwds = '$**kwds',)
]]></configfile>
  </configfiles>
  <inputs>
    <expand macro="inputs_anndata"/>
    <param name="var_names" type="str" value="" label="var_names" help="    `var_names` should be a valid subset of  `adata.var_names`."/>
    <param name="groupby" type="str" value="None" optional="true" label="groupby" help="    The key of the observation grouping to consider."/>
    <param name="log" type="bool" value="False" optional="true" label="log" help="    Plot on logarithmic axis."/>
    <param name="use_raw" type="bool" value="None" optional="true" label="use_raw" help="    Use `raw` attribute of `adata` if present."/>
    <param name="num_categories" type="int" value="7" optional="true" label="num_categories" help="    Only used if groupby observation is not categorical. This value    determines the number of groups into which the groupby observation    should be subdivided."/>
    <param name="stripplot" type="bool" value="True" optional="true" label="stripplot" help="    Add a stripplot on top of the violin plot.    See `seaborn.stripplot`."/>
    <param name="jitter" type="float" value="True" optional="true" label="jitter" help="    Add jitter to the stripplot (only when stripplot is True)    See `seaborn.stripplot`."/>
    <param name="size" type="data" format="int" value="" optional="true" label="size" help="    Size of the jitter points."/>
    <param name="order" type="data" format="list of str" value="True" optional="true" label="order" help="    Order in which to show the categories."/>
    <param name="scale" type="data" format="{'area'" value="" optional="true" label="scale" help="    The method used to scale the width of each violin. If 'area', each    violin will have the same area. If 'count', the width of the violins    will be scaled by the number of observations in that bin. If 'width',    each violin will have the same width."/>
    <param name="figsize" type="data" format="" value="" optional="true" label="figsize" help="    Figure size when multi_panel = True. Otherwise the rcParam['figure.figsize] value is used.    Format is (width, height)"/>
    <param name="var_group_positions" type="data" format=" list of `tuples`." value="" label="var_group_positions" help="    Use this parameter to highlight groups of `var_names` (only when swap_axes=False).    This will draw a 'bracket'    on top of the plot between the given start and end positions. If the    parameter `var_group_labels` is set, the corresponding labels is added on    top of the bracket. E.g. var_group_positions = [(4,10)] will add a bracket    between the fourth var_name and the tenth var_name. By giving more    positions, more brackets are drawn."/>
    <param name="var_group_labels" type="data" format="list of `str`" value="" label="var_group_labels" help="    Labels for each of the var_group_positions that want to be highlighted."/>
    <param name="swap_axes: `bool`, optional (default: `False`)" type="data" format="" value="" label="swap_axes: `bool`, optional (default: `False`)" help="     By default, the x axis contains `var_names` (e.g. genes) and the y axis the `groupby `categories.     By setting `swap_axes` then y are the `groupby` categories and x the `var_names`. When swapping     axes var_group_positions are no longer used"/>
    <param name="var_group_rotation" type="float" value="None" label="var_group_rotation" help="    Label rotation degrees. By default, labels larger than 4 characters are rotated 90 degrees"/>
    <param name="show" type="bool" value="None" optional="true" label="show" help="     Show the plot, do not return axis."/>
    <param name="save" type="bool" value="None" optional="true" label="save" help="    If `True` or a `str`, save the figure. A string is appended to the default    filename. Infer the filetype if ending on {'.pdf', '.png', '.svg'}."/>
    <param name="ax" type="matplotlib.Axes" value="None" optional="true" label="ax" help="    A matplotlib axes object. Only works if plotting a single component."/>
    <param name="**kwds" type="data" format="keyword arguments" value="" label="**kwds" help="    Are passed to `seaborn.violinplot`."/>
    <section name="pl_settings" title="Plot settings" expanded="false"><expand macro="inputs_set_figure_params"/></section></inputs>
  <outputs>
    <data name="A list of `matplotlib.Axes` where each ax corresponds to each row in the image" type="data" format="" label="${tool.name} on ${on_string}: A list of `matplotlib.Axes` where each ax corresponds to each row in the image"/>
    </outputs>
  <tests>
    <test>
      <param name="var_names" value=""/>
      <param name="groupby" value=""/>
      <param name="log" value=""/>
      <param name="use_raw" value=""/>
      <param name="num_categories" value=""/>
      <param name="stripplot" value=""/>
      <param name="jitter" value=""/>
      <param name="size" value=""/>
      <param name="order" value=""/>
      <param name="scale" value=""/>
      <param name="figsize" value=""/>
      <param name="var_group_positions" value=""/>
      <param name="var_group_labels" value=""/>
      <param name="swap_axes: `bool`, optional (default: `False`)" value=""/>
      <param name="var_group_rotation" value=""/>
      <param name="show" value=""/>
      <param name="save" value=""/>
      <param name="ax" value=""/>
      <param name="**kwds" value=""/>
      <expand macro="tests_set_figure_params"/>
      <output name="A list of `matplotlib.Axes` where each ax corresponds to each row in the image" file=""/>
    </test>
  </tests>
  <help><![CDATA[
        Stacked violin plots.

Makes a compact image composed of individual violin plots (from `seaborn.violinplot`)
stacked on top of each other. Useful to visualize gene expression per cluster.

Wraps `seaborn.violinplot` for :class:`~anndata.AnnData`.

Parameters
----------
adata : :class:`~anndata.AnnData`
    Annotated data matrix.
var_names : `str` or list of `str`
    `var_names` should be a valid subset of  `adata.var_names`.
groupby : `str` or `None`, optional (default: `None`)
    The key of the observation grouping to consider.
log : `bool`, optional (default: `False`)
    Plot on logarithmic axis.
use_raw : `bool`, optional (default: `None`)
    Use `raw` attribute of `adata` if present.
num_categories : `int`, optional (default: `7`)
    Only used if groupby observation is not categorical. This value
    determines the number of groups into which the groupby observation
    should be subdivided.
stripplot : `bool` optional (default: `True`)
    Add a stripplot on top of the violin plot.
    See `seaborn.stripplot`.
jitter : `float` or `bool`, optional (default: `True`)
    Add jitter to the stripplot (only when stripplot is True)
    See `seaborn.stripplot`.
size : int, optional (default: 1)
    Size of the jitter points.
order : list of str, optional (default: `True`)
    Order in which to show the categories.
scale : {'area', 'count', 'width'}, optional (default: 'width')
    The method used to scale the width of each violin. If 'area', each
    violin will have the same area. If 'count', the width of the violins
    will be scaled by the number of observations in that bin. If 'width',
    each violin will have the same width.
figsize : (float, float), optional (default: None)
    Figure size when multi_panel = True. Otherwise the rcParam['figure.figsize] value is used.
    Format is (width, height)
var_group_positions :  list of `tuples`.
    Use this parameter to highlight groups of `var_names` (only when swap_axes=False).
    This will draw a 'bracket'
    on top of the plot between the given start and end positions. If the
    parameter `var_group_labels` is set, the corresponding labels is added on
    top of the bracket. E.g. var_group_positions = [(4,10)] will add a bracket
    between the fourth var_name and the tenth var_name. By giving more
    positions, more brackets are drawn.
var_group_labels : list of `str`
    Labels for each of the var_group_positions that want to be highlighted.
swap_axes: `bool`, optional (default: `False`)
     By default, the x axis contains `var_names` (e.g. genes) and the y axis the `groupby `categories.
     By setting `swap_axes` then y are the `groupby` categories and x the `var_names`. When swapping
     axes var_group_positions are no longer used
var_group_rotation : `float` (default: `None`)
    Label rotation degrees. By default, labels larger than 4 characters are rotated 90 degrees
show : `bool`, optional (default: `None`)
     Show the plot, do not return axis.
save : `bool` or `str`, optional (default: `None`)
    If `True` or a `str`, save the figure. A string is appended to the default
    filename. Infer the filetype if ending on {'.pdf', '.png', '.svg'}.
ax : `matplotlib.Axes`, optional (default: `None`)
    A matplotlib axes object. Only works if plotting a single component.
**kwds : keyword arguments
    Are passed to `seaborn.violinplot`.

Returns
-------
A list of `matplotlib.Axes` where each ax corresponds to each row in the image
    ]]></help>
  <expand macro="citations"/>
</tool>
