<tool id="pp.regress_out" name="pp.regress_out" version="1.3.1+galaxy1">
    <description>Regress out unwanted sources of variation</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
          python $script_file
      ]]></command>
    <configfiles>
        <configfile name="script_file"><![CDATA[
@CMD_imports@
@CMD_read_inputs@

sc.pp.regress_out(
   adata=adata,
   keys='$reg_keys',
   copy=False)

@CMD_anndata_write_outputs@
]]></configfile>
  </configfiles>
    <inputs>
        <expand macro="inputs_anndata"/>
        <param name="reg_keys" type="text" value="" label="Keys for observation annotation on which to regress on" help=""/>
        <expand macro="anndata_output_format"/>
    </inputs>
    <outputs>
        <expand macro="anndata_outputs"/>
    </outputs>
    <tests>
        <test>
            <conditional name="input">
                <param name="format" value="h5ad" />
                <param name="adata" value="krumsiek11.h5ad" />
            </conditional>
            <param name="reg_keys" value="cell_type"/>
            <param name="anndata_output_format" value="h5ad" />
            <output name="anndata_out_h5ad" file="pp.regress_out.krumsiek11.h5ad" ftype="h5" compare="sim_size"/>
        </test>
    </tests>
    <help><![CDATA[
Regress out unwanted sources of variation, using simple linear regression. This is inspired by Seurat's `regressOut`
function in R [Satija15].

More details on the `scanpy documentation
<https://scanpy.readthedocs.io/en/latest/api/scanpy.api.pp.regress_out.html#scanpy.api.pp.regress_out>`__

    ]]></help>
    <expand macro="citations"/>
</tool>
