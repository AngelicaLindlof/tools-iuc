<tool id="pl.rank_genes_groups" name="pl.rank_genes_groups" version="1.3.1+galaxy1">
  <description>Plot ranking of genes.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc
@CMD_set_figure_params
@CMD_read_inputs

sc.pl.rank_genes_groups(
   adata = '$adata',
   groups = '$groups',
   gene_symbols = '$gene_symbols',
   n_genes = '$n_genes',
   fontsize = '$fontsize',
   n_panels_per_row: `int`, optional (default: 4) = '$n_panels_per_row: `int`, optional (default: 4)',
   sharey: `bool`, optional (default: True) = '$sharey: `bool`, optional (default: True)',
   show = '$show',
   save = '$save',
   ax = '$ax',)
]]></configfile>
  </configfiles>
  <inputs>
    <expand macro="inputs_anndata"/>
    <param name="groups" type="str" value="" label="groups" help="    The groups for which to show the gene ranking."/>
    <param name="gene_symbols" type="str" value="" label="gene_symbols" help="    Key for field in `.var` that stores gene symbols if you do not want to    use `.var_names`."/>
    <param name="n_genes" type="int" value="" optional="true" label="n_genes" help="    Number of genes to show."/>
    <param name="fontsize" type="int" value="" optional="true" label="fontsize" help="    Fontsize for gene names."/>
    <param name="n_panels_per_row: `int`, optional (default: 4)" type="data" format="" value="" label="n_panels_per_row: `int`, optional (default: 4)" help="    Number of panels shown per row."/>
    <param name="sharey: `bool`, optional (default: True)" type="data" format="" value="" label="sharey: `bool`, optional (default: True)" help="    Controls if the y-axis of each panels should be shared. But setting    sharey=False, each panel has its own y-axis range."/>
    <param name="show" type="bool" value="None" optional="true" label="show" help="     Show the plot, do not return axis."/>
    <param name="save" type="bool" value="None" optional="true" label="save" help="    If `True` or a `str`, save the figure. A string is appended to the default    filename. Infer the filetype if ending on {'.pdf', '.png', '.svg'}."/>
    <param name="ax" type="matplotlib.Axes" value="None" optional="true" label="ax" help="    A matplotlib axes object. Only works if plotting a single component."/>
    <section name="pl_settings" title="Plot settings" expanded="false"><expand macro="inputs_set_figure_params"/></section></inputs>
  <outputs>
    </outputs>
  <tests>
    <test>
      <param name="groups" value=""/>
      <param name="gene_symbols" value=""/>
      <param name="n_genes" value=""/>
      <param name="fontsize" value=""/>
      <param name="n_panels_per_row: `int`, optional (default: 4)" value=""/>
      <param name="sharey: `bool`, optional (default: True)" value=""/>
      <param name="show" value=""/>
      <param name="save" value=""/>
      <param name="ax" value=""/>
      <expand macro="tests_set_figure_params"/>
    </test>
  </tests>
  <help><![CDATA[
        Plot ranking of genes.

Parameters
----------
adata : :class:`~anndata.AnnData`
    Annotated data matrix.
groups : `str` or `list` of `str`
    The groups for which to show the gene ranking.
gene_symbols : `str`
    Key for field in `.var` that stores gene symbols if you do not want to
    use `.var_names`.
n_genes : `int`, optional (default: 20)
    Number of genes to show.
fontsize : `int`, optional (default: 8)
    Fontsize for gene names.
n_panels_per_row: `int`, optional (default: 4)
    Number of panels shown per row.
sharey: `bool`, optional (default: True)
    Controls if the y-axis of each panels should be shared. But setting
    sharey=False, each panel has its own y-axis range.

show : `bool`, optional (default: `None`)
     Show the plot, do not return axis.
save : `bool` or `str`, optional (default: `None`)
    If `True` or a `str`, save the figure. A string is appended to the default
    filename. Infer the filetype if ending on {'.pdf', '.png', '.svg'}.
ax : `matplotlib.Axes`, optional (default: `None`)
    A matplotlib axes object. Only works if plotting a single component.
    ]]></help>
  <expand macro="citations"/>
</tool>
