<tool id="pp.subsample" name="pp.subsample" version="1.3.1+galaxy1">
  <description>Subsample to a fraction of the number of observations.</description>
  <macros>
    <import>macros.xml</import>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code"><![CDATA[
        python $script_file
    ]]></command>
  <configfiles>
    <configfile name="script_file"><![CDATA[
import scanpy.api as sc

@CMD_read_inputs

sc.pp.subsample(
   data = '$adata',
   fraction = '$fraction',
   n_obs = '$n_obs',
   random_state = '$random_state',
   copy = '$copy',)
]]></configfile>
  </configfiles>
  <inputs>
    <expand macro="inputs_anndata"/>
    <param name="fraction" type="float" value="None" optional="true" label="fraction" help="    Subsample to this `fraction` of the number of observations."/>
    <param name="n_obs" type="int" value="None" optional="true" label="n_obs" help="    Subsample to this number of observations."/>
    <param name="random_state" type="int" value="" optional="true" label="random_state" help="    Random seed to change subsampling."/>
    <param name="copy" type="bool" value="False" optional="true" label="copy" help="    If an :class:`~anndata.AnnData` is passed, determines whether a copy    is returned."/>
    </inputs>
  <outputs>
    <data name="Returns `X[obs_indices], obs_indices` if data is array-like, otherwise" type="data" format="" label="${tool.name} on ${on_string}: Returns `X[obs_indices], obs_indices` if data is array-like, otherwise"/>
    <data name="subsamples the passed :class:`~anndata.AnnData` (`copy == False`) or" type="data" format="" label="${tool.name} on ${on_string}: subsamples the passed :class:`~anndata.AnnData` (`copy == False`) or"/>
    <data name="returns a subsampled copy of it (`copy == True`)." type="data" format="" label="${tool.name} on ${on_string}: returns a subsampled copy of it (`copy == True`)."/>
    </outputs>
  <tests>
    <test>
      <param name="fraction" value=""/>
      <param name="n_obs" value=""/>
      <param name="random_state" value=""/>
      <param name="copy" value=""/>
      <output name="Returns `X[obs_indices], obs_indices` if data is array-like, otherwise" file=""/>
      <output name="subsamples the passed :class:`~anndata.AnnData` (`copy == False`) or" file=""/>
      <output name="returns a subsampled copy of it (`copy == True`)." file=""/>
    </test>
  </tests>
  <help><![CDATA[
        Subsample to a fraction of the number of observations.

Parameters
----------
data : :class:`~anndata.AnnData`, `np.ndarray`, `sp.sparse`
    The (annotated) data matrix of shape `n_obs` Ã— `n_vars`. Rows correspond
    to cells and columns to genes.
fraction : `float` in [0, 1] or `None`, optional (default: `None`)
    Subsample to this `fraction` of the number of observations.
n_obs : `int` or `None`, optional (default: `None`)
    Subsample to this number of observations.
random_state : `int` or `None`, optional (default: 0)
    Random seed to change subsampling.
copy : `bool`, optional (default: `False`)
    If an :class:`~anndata.AnnData` is passed, determines whether a copy
    is returned.

Returns
-------
Returns `X[obs_indices], obs_indices` if data is array-like, otherwise
subsamples the passed :class:`~anndata.AnnData` (`copy == False`) or
returns a subsampled copy of it (`copy == True`).
    ]]></help>
  <expand macro="citations"/>
</tool>
